mongoDB命令：
	   mongod    		-->	启动服务器

	   mongo      		-->	连接服务器

	   mongod dbpath 数据库路径 --port  端口  -->	指定路径,并指定端口

	--bind_ip      		-->	绑定服务IP，若绑定127.0.0.1，则只能本机访问，不指定默认本地所有IP

	--logpath     		-->	定MongoDB日志文件，注意是指定文件不是目录

	--logappend		-->	使用追加的方式写日志

	--dbpath      		-->	指定数据库路径

	--port           		-->	指定服务端口号，默认端口27017

	--serviceName		-->	指定服务名称

	--serviceDisplayName	-->	指定服务名称，有多个mongodb服务时执行。

	--install			-->	指定作为一个Windows服务安装

	sc delete MongoDB		-->	删除之前配置的服务
	
	mongod --dbpath "e:\data\db" --logpath "e:\data\log\mongodb.log" --serviceName "mongodb" --serviceDisplayName "mongodb" --install
	mongod.exe --remove --serviceName "mongodb"

----------------------------------------------------------------------------------------------------------------------------------------------------


MongoDB基本操作：


	数据库	-->	database
	数据库是一个仓库，可以存放集合	

	集   合	-->	collection
	集合类似于数组，可以存放文档
	
	文   档	-->	document
	文档是数据库中最小的单位，存储和操作的内容都是文档

基本指令：
	show dbs		-->
	show databases	-->	显示当前数据库

	use 数据库名	-->	进入指定数据库（有责进入，没有责创建）

	db		-->	代表当前数据库

	show collections	-->	显示数据库中所有的集合

-----------------------------------------------------------------------------------------------------------------------------------------------------

数据库的CRUD(增删改查)操作

增加：
	db.集合.insert(数据)		-->	添加操作，数据是json格式
	向数据库中插入文档	（向集合中插入一个或多个文档）	-->	db.<collection>.insert()
   	当我们向数据库集合插入文档时，没有像文档指定_id属性，文档会自动为文档添加_id  该属性用来作为文档的唯一标识)

	db.collection.insertOne();	-->	插入一条

	db.collection.insertMany();	-->	插入多条

查询：
	
	find()查询集合中所有符合条件的文档
	没条件就导入所有文档
	find({})	{}表示查询集合中的所有文档
	{属性：值}  查询属性时指定值的文档

	db.collection.findOne({属性：值}).属性   返回一个文档的对象

	db.collection.find().count()查询集合个数


	db.集合.find()		-->	查询操作


修改：
	
	update（）加一个multi:true  可以实现修改多个  不加$set 会使用新对象来替换旧的对象
	如果需要修改指定参数，而不是替换需要使用 修改操作符

	$set  可以用来修改文档中的指定属性
	$unset	可以用来删除文档的指定属性
	$push	可以用于向数组中添加一个新的元素
	$pop	可以用于数组中删除一个元素
	$addToSet	向数组中添加一个新元素（不重复）


	updateOne()	修改一个
	updateMany()	修改多个

	db.collection.update()	-->	.update(查询条件，新对象)修改

删除：


	db.collection.remove()	-->	删除符合条件的所有文档	db.test.remove({条件},true)只删除一个	-->如果remove({})不指定删除条件，就会把所有文档都删了

	清空集合 ： remove({}) 	(性能差)

	删除集合：  db.collection.drop() 	-->	drop()

	删除数据库：db.dropDatabase()

	db.collection.deleteOne()	-->	删除符合条件的第一个文档
	db.collection.delete	Many()

	
替换：

	db.collection.replaceOne()





-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


干货：
	MongoDB支持直接通过内嵌文档对文档的属性进行查询，如果要查询内嵌文档责可以通过  .  的形式来匹配
	如果通过内嵌文档来对文档进行查询，此时属性名必须使用引号

	MongoDB里可以使用for循环但是效率很差

	查询文档时，默认情况下以_id的值进行排列（升序）
	

	
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


操作符：

	$set  可以用来修改文档中的指定属性
	$unset	可以用来删除文档的指定属性
	$push	可以用于向数组中添加一个新的元素
	$pop	可以用于数组中删除一个元素
	$addToSet	向数组中添加一个新元素（不重复）




	
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


排序：
	sort()	-->	指定文档的排序规则	sort({属性：值})可以同时指定多个排序规则	sort()需要传递一个对象来指定排序规则  （1 --> 表示升序）	（-1  -->  表示降序）
	
	limit  skip   sort	-->	可以以任意的顺序进行调用


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

投影：
	在查询时，可以再第二个参数的位置来设置查询结果的	投影

	db.users.find({},{age:1})
	
